{"version":3,"file":"static/js/142.8922505a.chunk.js","mappings":"wNAAaA,EAAe,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,IAApB,EACpBC,EAA4B,SAAAH,GAAK,OAAIA,EAAMC,UAAUG,YAApB,E,mGCIjCC,EAAcC,EAAAA,QAAAA,GAAH,yQAmBXC,EAAQD,EAAAA,QAAAA,IAAH,6M,UCgGlB,EAnGkB,WAChB,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAiBC,EAAAA,EAAAA,IAAYZ,GAC7BK,GAAeO,EAAAA,EAAAA,IAAYR,GAEjC,GAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEA,GAA0BJ,EAAAA,EAAAA,UAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwCN,EAAAA,EAAAA,UAAS,CAAC,EAAG,IAArD,eAAOO,EAAP,KAAqBC,EAArB,KACMC,GAAUC,EAAAA,EAAAA,MAEVC,GADaC,EAAAA,EAAAA,MAAXC,OACYC,OAAO,GAC3B,GAAoCd,EAAAA,EAAAA,WAAUW,GAA9C,eAAOI,EAAP,KAAmBC,EAAnB,MAGAC,EAAAA,EAAAA,YAAU,WACRrB,GAASsB,EAAAA,EAAAA,OACThB,EAAWJ,EAGZ,GAAE,CAACF,KAEJqB,EAAAA,EAAAA,YAAU,WACRb,EAAaZ,EACd,GAAE,CAACA,KAEJyB,EAAAA,EAAAA,YAAU,WACRf,EAAWJ,GACXQ,EAASR,EAAeqB,OACzB,GAAE,CAACrB,IAuBJ,OAhBAmB,EAAAA,EAAAA,YAAU,WAIJF,GAAc,GAChBC,EAAc,GAEZX,EA9BU,IA8BUM,EAAO,GAC7BK,EAAcX,EA/BF,GAkCdI,EAAQ,SAAD,OAAUM,IACjBP,EAAgB,CAnCF,EAmCGO,EAAuB,EAnC1B,EAmC6BA,GAE5C,GAAE,CAACN,EAASM,EAAYV,KAGvB,SAACV,EAAD,UACGQ,GACC,SAACiB,EAAA,EAAD,KAEA,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,yBACCxB,GAAkBA,EAAeqB,OAAS,GACzC,SAAC1B,EAAD,UACGQ,EAAQa,MAAR,MAAAb,GAAO,OAAUM,IAAcgB,KAAI,SAAAC,GAAW,IAAD,QAC5C,OACE,yBACE,SAACC,EAAA,EAAD,CACEC,SAAS,UACTC,GAAIH,EAAOI,IACXC,IAAG,UAAEL,EAAOM,aAAT,QAAkBD,EACrBE,MAAK,UAAEP,EAAOO,aAAT,QAAkB,UACvBC,MACE,8CACGR,EAAOS,aADV,QAEIT,EAAOU,mBAFX,QAGI,mBAGNC,KAAMX,EAAOW,KAAP,UAAiBX,EAAOW,KAAxB,QAAqC,MAbtCX,EAAOI,IAiBnB,OAGH,SAACQ,EAAA,EAAD,CAAkBJ,KAAK,oEAExB/B,GAAWA,EAAQkB,OAAS,IAC3B,SAACkB,EAAA,EAAD,CACEC,MAAOC,KAAKC,KAAKnC,EA1Eb,GA2EJM,KAAMI,EACN0B,aA1DS,SAACC,EAAOC,GAC3B3B,EAAc2B,IACdC,EAAAA,EAAAA,IACD,QA8DF,C","sources":["redux/myRecipes/myRecipesSelectors.js","pages/MyRecipes/MyRecipes.styled.jsx","pages/MyRecipes/MyRecipes.jsx"],"sourcesContent":["export const getMyRecipes = state => state.myRecipes.data;\nexport const getMyRecipesRefreshStatus = state => state.myRecipes.isRefreshing;\n","import styled from 'styled-components';\n\nimport img from '../../images/default.jpg';\n\nexport { img };\nexport const RecipesList = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n\n  & li {\n    width: 100%;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 50px;\n  }\n`;\n\nexport const Thumb = styled.div`\n  padding-bottom: 100px;\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 200px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-bottom: 100px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchMyRecipes } from 'redux/myRecipes/myRecipesOperation';\nimport {\n  getMyRecipes,\n  getMyRecipesRefreshStatus,\n} from 'redux/myRecipes/myRecipesSelectors';\n\nimport { Container } from '../../components/Container/Container';\nimport { Title } from 'components/Title/Title';\nimport { RecipesItem } from 'components/RecipesItem/RecipesItem';\nimport { EmptyPlaceholder } from 'pages/EmptyPlaceholder/EmptyPlaceholder';\nimport { Loader } from 'components/Loader/Loader';\nimport { Paginator } from 'components/Pagination/Paginator';\n\nimport { scrollToTop } from 'utils/scrollUp';\n\nimport { RecipesList, Thumb, img } from './MyRecipes.styled';\n\nconst MyRecipes = () => {\n  const dispatch = useDispatch();\n  const storageRecipes = useSelector(getMyRecipes);\n  const isRefreshing = useSelector(getMyRecipesRefreshStatus);\n\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n\n  const [total, setTotal] = useState(0);\n  const [currentSlice, setcurrentSlice] = useState([0, 4]);\n  const history = useNavigate();\n  const { search } = useLocation();\n  const page = search.slice(-1);\n  const [pageNumber, setPageNumber] = useState(+page);\n  const perPage = 4;\n\n  useEffect(() => {\n    dispatch(fetchMyRecipes());\n    setRecipes(storageRecipes);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  useEffect(() => {\n    setisLoading(isRefreshing);\n  }, [isRefreshing]);\n\n  useEffect(() => {\n    setRecipes(storageRecipes);\n    setTotal(storageRecipes.length);\n  }, [storageRecipes]);\n\n  const handleChange = (event, value) => {\n    setPageNumber(value);\n    scrollToTop();\n  };\n\n  useEffect(() => {\n    // if (pageNumber <= 0 || pageNumber > Math.ceil(total / perPage)) {\n    //   setPageNumber(1);\n    // }\n    if (pageNumber <= 0) {\n      setPageNumber(1);\n    }\n    if (total / perPage === page - 1) {\n      setPageNumber(total / perPage);\n    }\n\n    history(`?page=${pageNumber}`);\n    setcurrentSlice([pageNumber * perPage - 4, pageNumber * perPage]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history, pageNumber, total]);\n\n  return (\n    <Thumb>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Container>\n          <Title>My recipes</Title>\n          {storageRecipes && storageRecipes.length > 0 ? (\n            <RecipesList>\n              {recipes.slice(...currentSlice).map(recipe => {\n                return (\n                  <li key={recipe._id}>\n                    <RecipesItem\n                      ViewMode=\"recipes\"\n                      id={recipe._id}\n                      img={recipe.thumb ?? img}\n                      title={recipe.title ?? 'No name'}\n                      text={\n                        <span>\n                          {recipe.about ??\n                            recipe.description ??\n                            'No description'}\n                        </span>\n                      }\n                      time={recipe.time ? `${recipe.time} min` : ''}\n                    />\n                  </li>\n                );\n              })}\n            </RecipesList>\n          ) : (\n            <EmptyPlaceholder text=\"You currently don't have any own recipes added. Let's add some!\" />\n          )}\n          {recipes && recipes.length > 0 && (\n            <Paginator\n              count={Math.ceil(total / perPage)}\n              page={pageNumber}\n              handleChange={handleChange}\n            />\n          )}\n        </Container>\n      )}\n    </Thumb>\n  );\n};\n\nexport default MyRecipes;\n"],"names":["getMyRecipes","state","myRecipes","data","getMyRecipesRefreshStatus","isRefreshing","RecipesList","styled","Thumb","dispatch","useDispatch","storageRecipes","useSelector","useState","recipes","setRecipes","isLoading","setisLoading","total","setTotal","currentSlice","setcurrentSlice","history","useNavigate","page","useLocation","search","slice","pageNumber","setPageNumber","useEffect","fetchMyRecipes","length","Loader","Container","Title","map","recipe","RecipesItem","ViewMode","id","_id","img","thumb","title","text","about","description","time","EmptyPlaceholder","Paginator","count","Math","ceil","handleChange","event","value","scrollToTop"],"sourceRoot":""}