{"version":3,"file":"static/js/241.99c22f28.chunk.js","mappings":"uOAkDA,EAhDmB,SAAAA,GACjB,MAA0BC,EAAAA,SAAe,IAAzC,eAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,EAAAA,SAAe,IAA7C,eAAOG,EAAP,KAAgBC,EAAhB,KAWMC,EAAY,mCAAG,WAAMC,GAAN,iEACnBA,EAAMC,iBACNC,QAAQC,IAAI,UACZV,EAAMM,aAAaF,GAHA,2CAAH,sDAMlB,OACE,4BACE,oCACA,kBAAMO,SAAUL,EAAhB,WACE,kBACEM,SAhBkB,SAAAL,GACxBA,EAAMC,iBACNH,EAAWE,EAAMM,cAAcX,MAChC,EAcOY,KAAK,OACLC,KAAK,OACLb,MAAOE,EACPY,QAAQ,yHACRC,MAAM,yIAENC,UAAQ,KAEV,mBAAQJ,KAAK,SAAb,wBAEF,0BACE,2CAEE,oBAAQZ,MAAOA,EAAOU,SAlCJ,SAAAL,GACxBJ,EAASI,EAAMY,OAAOjB,MACvB,EAgCO,WACE,mBAAQA,MAAM,QAAd,oBACA,mBAAQA,MAAM,aAAd,kCAMX,EClCD,EAZe,SAAC,GAAgB,IAAdkB,EAAa,EAAbA,OACRH,EAAiBG,EAAjBH,MAAOI,EAAUD,EAAVC,MACf,OACE,yBACE,eAAGC,KAAI,sDAAiDF,EAAOG,IAA/D,UACGN,GACD,gBAAKO,IAAKH,EAAOI,IAAI,MAAMC,MAAO,IAAKC,OAAQ,UAItD,ECED,EAX0B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OACE,wBACGA,GACCA,EAAQC,KAAI,SAAAT,GACV,OAAO,SAAC,EAAD,CAAyBA,OAAQA,GAApBA,EAAOU,IAC5B,KAGR,ECmCD,EAzCmB,WACjB,MAA8B7B,EAAAA,SAAe,IAA7C,eAAO2B,EAAP,KAAgBG,EAAhB,KACA,EAAwB9B,EAAAA,SAAe,GAAvC,eAAO+B,EAAP,KAAaC,EAAb,KACA,EAA8BhC,EAAAA,SAAe,IAA7C,eAAOG,EAAP,KAAgBC,EAAhB,KAOMC,EAAY,mCAAG,WAAMF,GAAN,iEACnB6B,EAAQ,GACR5B,EAAWD,GAFQ,2CAAH,sDAoBlB,OAfA8B,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAM,CACJC,OAAQ,MACRC,IAAI,8DAAD,OAAgEjC,EAAhE,iBAAgF4B,EAAhF,kBAVO,MAWTM,MAAK,SAAUC,GAChB9B,QAAQC,IAAI6B,GACZR,EACE,kBAAIH,IAAJ,OAAgBW,EAAKA,KAAKC,WAAUC,QAClC,SAACC,EAAGC,EAAGC,GAAP,OAAaA,EAAEC,WAAU,SAAAC,GAAE,OAAIA,EAAGhB,MAAQY,EAAEZ,GAAjB,MAA0Ba,CAArD,IAGL,GAEF,GAAE,CAACX,EAAM5B,EApBI,MAuBZ,4BACE,SAAC,EAAD,CAAYE,aAAcA,KAC1B,SAAC,EAAD,CAAqCsB,QAASA,GAAtBA,EAAQE,MAChC,mBAAQhB,KAAK,SAASiC,QA7BL,WACnBd,EAAQD,EAAO,EAChB,EA2BG,gCAKL,C","sources":["pages/SearchPage/SearchForm.jsx","pages/SearchPage/Recipe.jsx","pages/SearchPage/SearchRecipesList.jsx","pages/SearchPage/SearchPage.jsx"],"sourcesContent":["import * as React from 'react';\n\nconst SearchForm = props => {\n  const [value, setValue] = React.useState('');\n  const [keyword, setKeyword] = React.useState('');\n\n  const handleValueChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleInputChange = event => {\n    event.preventDefault();\n    setKeyword(event.currentTarget.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log('submit');\n    props.handleSubmit(keyword);\n  };\n\n  return (\n    <div>\n      <h1>Search</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          value={keyword}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For\n         example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <div>\n        <label>\n          Search by:\n          <select value={value} onChange={handleValueChange}>\n            <option value=\"title\">Title</option>\n            <option value=\"ingridient\">Ingridient</option>\n          </select>\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import * as React from 'react';\n\nconst Recipe = ({ recipe }) => {\n  const { title, thumb } = recipe;\n  return (\n    <li>\n      <a href={`https://determined-ruby-nematode.cyclic.app/${recipe.id}`}>\n        {title}\n        <img src={thumb} alt=\"img\" width={240} height={240} />\n      </a>\n    </li>\n  );\n};\n\nexport default Recipe;\n","import * as React from 'react';\nimport Recipe from './Recipe';\n\nconst SearchRecipesList = ({ recipes }) => {\n  return (\n    <ul>\n      {recipes &&\n        recipes.map(recipe => {\n          return <Recipe key={recipe._id} recipe={recipe} />;\n        })}\n    </ul>\n  );\n};\n\nexport default SearchRecipesList;\n","import axios from 'axios';\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport SearchForm from './SearchForm';\nimport SearchRecipesList from './SearchRecipesList';\n\nconst SearchPage = () => {\n  const [recipes, setRecipes] = React.useState([]);\n  const [page, setPage] = React.useState(1);\n  const [keyword, setKeyword] = React.useState('');\n\n  const loadNextPage = () => {\n    setPage(page + 1);\n  };\n  const LIMIT = 12;\n\n  const handleSubmit = async keyword => {\n    setPage(1);\n    setKeyword(keyword);\n  };\n\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: `https://determined-ruby-nematode.cyclic.app/recipes/search/${keyword}?page=${page}&limit=${LIMIT}`,\n    }).then(function (data) {\n      console.log(data);\n      setRecipes(\n        [...recipes, ...data.data.recepies].filter(\n          (v, i, a) => a.findIndex(v2 => v2._id === v._id) === i\n        )\n      );\n    });\n    // eslint-disable-next-line\n  }, [page, keyword, LIMIT]);\n\n  return (\n    <div>\n      <SearchForm handleSubmit={handleSubmit} />\n      <SearchRecipesList key={recipes._id} recipes={recipes} />\n      <button type=\"submit\" onClick={loadNextPage}>\n        Other categories\n      </button>\n    </div>\n  );\n};\n\nexport default SearchPage;\n"],"names":["props","React","value","setValue","keyword","setKeyword","handleSubmit","event","preventDefault","console","log","onSubmit","onChange","currentTarget","type","name","pattern","title","required","target","recipe","thumb","href","id","src","alt","width","height","recipes","map","_id","setRecipes","page","setPage","useEffect","axios","method","url","then","data","recepies","filter","v","i","a","findIndex","v2","onClick"],"sourceRoot":""}