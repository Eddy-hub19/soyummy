{"version":3,"file":"static/js/490.21928175.chunk.js","mappings":"0SAWaA,EAAsBC,EAAAA,GAAAA,IAAH,usDAINC,EAQtBC,EAAAA,EAGAC,EAAAA,EAsBwBC,EAaAC,EAMEC,EAQFC,EAMEC,GAKjBC,EAAYT,EAAAA,GAAAA,MAAH,gjBAGL,SAAAU,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAIE,SAAAF,GAAC,OAAIA,EAAEC,MAAME,eAAeC,OAA3B,IACV,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,UAAnB,IAoBCC,EAAWjB,EAAAA,GAAAA,EAAH,qkBACJ,SAAAU,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAGD,SAAAF,GAAC,OAAIA,EAAEC,MAAMO,YAAYC,WAAxB,IACE,SAAAT,GAAC,OAAIA,EAAEC,MAAME,eAAeC,OAA3B,IAuBNM,EAAcpB,EAAAA,GAAAA,IAAH,ssBAMT,SAAAU,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAGE,SAAAF,GAAC,OAAIA,EAAEC,MAAME,eAAeQ,SAA3B,IAOF,SAAAX,GAAC,OAAIA,EAAEC,MAAMO,YAAYI,IAAxB,I,SCnHpB,EAhCuB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAA+BD,EAA/BC,MAAOL,EAAwBI,EAAxBJ,YAAaG,EAAWC,EAAXD,KAE5B,OACI,+BACI,UAACvB,EAAD,YAEA,SAACU,EAAD,UAAYe,KACZ,SAACP,EAAD,UAAWE,KACX,SAACM,EAAA,EAAD,CACIC,KAAK,SACLC,KAAK,0BACL3B,OAAO,QACP4B,SAAS,YAIH,KAATN,GACD,UAACF,EAAD,YACI,0BACA,gBAAKS,KAAMC,EAAAA,EAAM,mBAEjB,0BAAOR,EAAI,aAGf,SAACF,EAAD,QAKN,EC1BN,EAbwB,SAAC,GAA2C,IAAzCW,EAAwC,EAAxCA,MAAOP,EAAiC,EAAjCA,MAAOQ,EAA0B,EAA1BA,OAAQb,EAAkB,EAAlBA,YAC7C,OACI,4BACI,4BACI,gBAAKc,IAAKF,EAAOG,IAAG,UAAKV,EAAL,eAAyBW,MAAO,GAAIC,OAAQ,MAChE,uBAAIZ,KACJ,uBAAIL,QAER,uBAAIa,KACJ,kBAAON,KAAM,eAGxB,ECSD,EAnB8B,SAAC,GAAqB,IAAnBW,EAAkB,EAAlBA,YAE7B,OACI,wBACKA,EAAYC,KAAI,SAAAC,GAAU,OAC3B,SAAC,EAAD,CAEIR,MAAOQ,EAAWC,IAClBhB,MAAOe,EAAWE,IAClBT,OAAQO,EAAWG,EAAIH,EAAWG,EAAI,GACtCvB,YAAaoB,EAAWI,MCKpB,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGT,GAAE,GAbe,CDTCG,GAFkB,KAatC,EECD,EApB0B,WACtB,OACI,0BACI,gDAeX,E,oBCiBD,EA3BmB,WACf,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAO/B,EAAP,KAAegC,EAAf,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAWR,OAVAE,QAAQC,IAAIH,IAIZI,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAcL,GAAUM,KAAKP,EAChC,GAAE,CAACC,IAGJE,QAAQC,IAAIpC,GAEG,OAAXA,IACI,iCACI,SAAC,EAAD,CAAgBA,OAAQA,KACxB,4BACI,SAAC,EAAD,CAAuBc,YAAad,EAAOc,eAC3C,SAAC,EAAD,CAAmB0B,aAAcxC,EAAOwC,oBAK3D,C","sources":["components/RecipePageHero/RecipePageHero.styled.jsx","components/RecipePageHero/RecipePageHero.jsx","components/IngredientsItem/IngredientsItem.jsx","components/RecipeIngredientsList/RecipeIngredientsList.jsx","../node_modules/nanoid/index.browser.js","components/RecipePreparation/RecipePreparation.jsx","pages/RecipePage/RecipePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport mob1 from \"../../images/mobile/recipeHero_mob_1x.jpg\";\nimport mob2 from \"../../images/mobile/recipeHero_mob_2x.jpg\";\nimport tab1 from '../../images/tablet/recipeHero_tab_1x.jpg';\nimport tab2 from '../../images/tablet/recipeHero_tab_2x.jpg';\nimport desktop1 from '../../images/desktop/recipeHero_desktop_1x.jpg';\nimport desktop2 from '../../images/desktop/recipeHero_desktop_2x.jpg';\nimport { Loader } from 'components/Loader/Loader';\nimport { ButtonSkewStyle } from 'components/ButtonSkew/buttonSkew.styled';\n\nexport const RecipeHeroContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-image: url(${mob1});\n  background-repeat: no-repeat;\n  width: 100%;\n  height: 455px;\n  margin-bottom: 32px;\n  padding-top: 144px;\n  padding-bottom: 90px;\n  background-size: 100%;\n  ${Loader} {\n    background-color: transparent;\n  }\n  ${ButtonSkewStyle} {\n    margin-top: 24;\n    padding: 10px 18px;\n    color: black;\n\n    @media screen and (min-width: 768px) {\n      padding-bottom: 90px;\n      padding: 18px 44px;\n    }\n    @media screen and (min-width: 1440px) {\n        margin-top: 30;\n    }\n\n    &:hover {\n      color: white;\n    }\n  }\n\n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    (-webkit-min-device-pixel-ratio: 2),\n    screen and (min-resolution: 2dppx) {\n    background-image: url(${mob2});\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 50px;\n    padding-top: 136px;\n    padding-bottom: 32px;\n    width: 768px;\n    height: 495px;\n    background-image: url(${tab1});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${tab2});\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-top: 164px;\n    height: 493px;\n    background-image: url(${desktop1});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${desktop2});\n    }\n  }\n`;\n\nexport const HeroTitle = styled.title`\n  display: block;\n  text-align: center;\n  font-weight: ${p => p.theme.fontWeights[2]};\n  font-size: 24px;\n  line-height: 1.3;\n  margin-bottom: 18px;\n  letter-spacing: ${p => p.theme.letterSpacings.content};\n  color: ${p => p.theme.colors.mainAccent};\n\n  max-width: 330px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow-y: clip;\n\n  @media screen and (min-width: 768px) {\n    max-width: 680px;\n    font-size: 44px;\n    margin-bottom: 24px;\n  }\n  @media screen and (min-width: 1440px) {\n    max-width: 1000px;\n  }\n`;\n\nexport const HeroText = styled.p`\n  font-weight: ${p => p.theme.fontWeights[0]};\n  text-align: center;\n  font-size: 12px;\n  line-height: ${p => p.theme.lineHeights.description};\n  letter-spacing: ${p => p.theme.letterSpacings.content};\n  width: 303px;\n  margin-bottom: 15px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 4;\n  -webkit-box-orient: vertical;\n  overflow-y: clip;\n  hyphens: auto;\n\n  @media screen and (min-width: 768px) {\n    width: 506px;\n    font-size: 18px;\n    line-height: 1.33;\n  }\n  @media screen and (min-width: 1440px) {\n    -webkit-line-clamp: 3;\n    margin-bottom: 15px;\n    width: 656px;\n  }\n`;\n\n  export const CookingTime = styled.div`\n  display: flex;\n  width: fit-content;\n  align-items: center;\n  color: black;\n  margin-top: 42px;\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 10px;\n  line-height: 1.4;\n  letter-spacing: ${p => p.theme.letterSpacings.subheader};\n  height: 14px;\n\n  @media screen and (min-width: 768px) {\n    height: 20px;\n    margin-top: 65px;\n    font-size: 14px;\n    line-height: ${p => p.theme.lineHeights.time};\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 48px;\n  }\n\n  & svg {\n    margin-right: 5px;\n    stroke: black;\n    display: inline-block;\n    width: 14px;\n    height: 14px;\n\n    @media screen and (min-width: 768px) {\n      width: 20px;\n      height: 20px;\n    }\n    @media screen and (min-width: 1440px) {\n    }\n  }\n`;","import React from 'react';\nimport { ButtonSkew } from 'components/ButtonSkew/ButtonSkew';\nimport sprite from '../../images/sprite.svg';\nimport {\n  RecipeHeroContainer,\n  HeroTitle,\n    HeroText,\n    CookingTime\n} from './RecipePageHero.styled';\n// import { Loader } from 'components/Loader/Loader';\n\nconst RecipePageHero = ({ recipe }) => {\n    const { title, description, time,  } = recipe;\n    \n    return (\n        <>\n            <RecipeHeroContainer>\n            {/* <Loader></Loader> */}\n            <HeroTitle>{title}</HeroTitle>\n            <HeroText>{description}</HeroText>\n            <ButtonSkew\n                type=\"button\"\n                text=\"Add to favorite recipes\"\n                styled=\"other\"\n                location=\"recipes\"\n                // fn={addtoFavorite}\n                />\n\n            {time !== '' ? (\n            <CookingTime>\n                <svg>\n                <use href={sprite + `#icon-clock`} />\n                </svg>\n                <span>{time + ` min`}</span>\n            </CookingTime>\n            ) : (\n            <CookingTime></CookingTime>\n                )}\n                \n            </RecipeHeroContainer>\n            </>\n    )};\n\nexport default RecipePageHero;\n","// import { ReactComponent as DefaultIngredient } from 'images/svg-before sprite/paperbag.svg';\n\nconst IngredientsItem = ({ image, title, weight, description }) => {\n    return (\n        <div>\n            <div>\n                <img src={image} alt={`${title} ingredient`} width={40} height={30} />\n                <p>{title}</p>\n                <p>{description}</p>\n            </div>\n            <p>{weight}</p>\n            <input type={\"checkbox\"}/>\n            </div>\n    );\n}\nexport default IngredientsItem;","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport IngredientsItem from 'components/IngredientsItem/IngredientsItem';\n\nconst RecipeIngredientsList = ({ ingredients }) => {\n\n    return (\n        <ul>\n            {ingredients.map(ingredient => (\n            <IngredientsItem\n                key={nanoid()}\n                image={ingredient.thb}\n                title={ingredient.ttl}\n                weight={ingredient.t ? ingredient.t : ''}\n                description={ingredient.desc}\n            //   list={list}\n            // recipeId={recipeId + index}\n            />\n            ))}\n            </ul>\n  );\n};\n\nexport default RecipeIngredientsList;\n\n\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","\n\nconst RecipePreparation = () => {\n    return (\n        <div>\n            <h3>Recipe Preparation</h3>\n            \n            {/* <ol>\n                <li>\n                    <p>Melt the butter in a thick-based pan and gently cook the onion without colour until it is soft.</p>\n                </li>\n                <li>\n                    <p>Add the rice and stir to coat all the grains in the butter.</p>\n                </li>\n                <li>\n                    <p>Add the wine and cook gently stirring until it is absorbed.</p>\n                </li>\n            </ol> */}\n        </div>\n  );\n};\n\nexport default RecipePreparation;\n","import RecipePageHero from \"components/RecipePageHero/RecipePageHero\";\nimport RecipeIngredientsList from \"components/RecipeIngredientsList/RecipeIngredientsList\";\nimport RecipePreparation from \"components/RecipePreparation/RecipePreparation\";\nimport { getRecipeById } from \"../../service/axios/axios\";\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { useParams} from 'react-router-dom';\n// import  from '@mui/material/Button';\n\n\nconst RecipePage = () => {\n    const [recipe, setRecipe] = useState(null);\n    const { recipeId } = useParams();\n    console.log(recipeId);\n    //   const location = useLocation();\n    //   const backLinkHref = location.state?.from ?? '/recipes';\n\n    useEffect(() => {\n        getRecipeById(recipeId).then(setRecipe);\n    }, [recipeId]);\n\n\n    console.log(recipe);\n    return (\n        recipe !== null && (\n            <>\n                <RecipePageHero recipe={recipe} />\n                <div>\n                    <RecipeIngredientsList ingredients={recipe.ingredients} />\n                    <RecipePreparation instructions={recipe.instructions} />\n                </div>\n                \n            </>\n        ));\n};\n\n\nexport default RecipePage;"],"names":["RecipeHeroContainer","styled","mob1","Loader","ButtonSkewStyle","mob2","tab1","tab2","desktop1","desktop2","HeroTitle","p","theme","fontWeights","letterSpacings","content","colors","mainAccent","HeroText","lineHeights","description","CookingTime","subheader","time","recipe","title","ButtonSkew","type","text","location","href","sprite","image","weight","src","alt","width","height","ingredients","map","ingredient","thb","ttl","t","desc","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid","useState","setRecipe","recipeId","useParams","console","log","useEffect","getRecipeById","then","instructions"],"sourceRoot":""}