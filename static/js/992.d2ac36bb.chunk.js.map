{"version":3,"file":"static/js/992.d2ac36bb.chunk.js","mappings":"oPAUaA,EAAe,WAC1B,IAAQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACR,GAA0BE,EAAAA,EAAAA,UAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBN,EAAAA,EAAAA,WAAS,GAAjC,eAAOO,EAAP,KAAaC,EAAb,MAGAC,EAAAA,EAAAA,YAAU,WACR,KACoBC,EAAAA,EAAAA,KAERC,MAAK,SAAAC,GACb,OAAOR,EAAYQ,EACpB,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAAE,KAEHP,EAAAA,EAAAA,YAAU,WACR,GAAwB,IAApBN,EAASc,OAAb,CAEA,IAAMC,EAAMf,EAASgB,WAAU,SAAAC,GAC7B,OAAOA,EAAEC,gBAAkBvB,CAC5B,KAEY,IAAToB,GACFhB,EAASgB,EAPsB,CASlC,GAAE,CAACpB,EAAcK,IAElB,IAKMmB,EAAQnB,EAASoB,KAAI,SAACH,EAAGI,GAAJ,OACzB,SAACC,EAAA,EAAD,CACEC,MAAON,EAAEC,cAETM,GAAI,CACFC,QAAS,IACTC,cAAe,OACfC,MAAOC,EAAAA,EAAAA,OAAAA,aACP,iBAAkB,CAChBD,MAAO,aANNN,EAHkB,IAoBrBQ,EAAWC,OAAOC,WAAa,IAErC,OACE,SAACC,EAAA,EAAD,CACER,GAAI,CAAES,SAAU,MAAOC,QAAS,cAAeC,aAAcP,EAAAA,EAAAA,QAAAA,iBAC7DQ,aAXiB,WACnB/B,GAAQ,EACT,EAUGgC,aATiB,WACnBhC,GAAQ,EACT,EAIC,UAKE,SAACiC,EAAA,EAAD,CACEC,SAlCe,SAACC,EAAOC,GAC3B1C,EAAS0C,GACTvC,EAAS,eAAD,OAAgBsC,EAAME,OAAOC,aACtC,EAgCK7C,MAAOA,EACP8C,QAAQ,aACRC,eAAe,EACf,aAAW,+BACXrB,GAAI,CACF,sBAAuB,CACrB,mCAAoC,CAAEsB,gBAAiB,WACvD,gBAAiB,CAAEA,gBAAiB,WACpCC,UAAW,OACXC,eAAgB,OAChB,uBAAwB,CACtBC,QAAS,SAIb,2BAA4B,CAC1BC,IAAKrB,EAAW,OAAS,OACzB,WAAY,CACVF,MAAO,YAIX,iBAAkB,CAChBwB,cAAe,aACfC,SAAU,QACVC,SAAUxB,EAAW,OAAS,OAC9ByB,WAAY,UACZC,WAAY,MACZC,WAAY,OACZC,YAAa,UACbC,WAAY,QAGd,QAAS,CACPC,QAAQ,GAAD,OAAKvD,EAAO,EAAI,GACvBwD,OAAQ,UACRC,YAAa,MACbC,WAAY,2CAvClB,SA4CG3C,KAGR,E,6BCxHY4C,E,QAAsBC,QAAAA,IAAH,6RCiBhC,EAZmB,WACjB,OACE,UAACD,EAAD,YACE,SAACE,EAAA,EAAD,0BACA,SAACvE,EAAD,KACA,SAAC,EAAAwE,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,yHCfY7D,EAAkB,mCAAG,oGAET8D,EAAAA,EAAAA,IAAkB,0BAFT,cAE1BC,EAF0B,yBAGzBA,EAAS7D,MAHgB,2CAAH,qDAMlB8D,EAA6B,SAACC,GAEzC,OAAOH,EAAAA,EAAAA,IAAA,4BAAuCG,IAAYhE,MAAK,YAC7D,OAD2E,EAAXC,IAEjE,GACF,C","sources":["components/CategoryList/CategoryList.jsx","pages/Categories/Categories.styled.js","pages/Categories/Categories.jsx","service/API/CategoriesAPI.js"],"sourcesContent":["import Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { getCategoryListAPI } from 'service/API/CategoriesAPI';\nimport { theme } from '../../theme/theme';\n\n\nexport const CategoryList = () => {\n  const { categoryName } = useParams();\n  const [value, setValue] = useState(0);\n  const [mapArray, setMapArray] = useState([]);\n  const navigate = useNavigate();\n  const [flag, setFlag] = useState(false);\n\n\n  useEffect(() => {\n    try {\n      const categorys = getCategoryListAPI();\n\n      categorys.then(data => {\n        return setMapArray(data);\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (mapArray.length === 0) return;\n\n    const idx = mapArray.findIndex(e => {\n      return e.toLowerCase() === categoryName;\n    });\n\n    if (idx !== -1) {\n      setValue(idx);\n    }\n  }, [categoryName, mapArray]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    navigate(`/categories/${event.target.textContent}`);\n  };\n\n  const items = mapArray.map((e, index) => (\n    <Tab\n      label={e.toLowerCase()}\n      key={index}\n      sx={{\n        padding: '0',\n        paddingBottom: '28px',\n        color: theme.colors.disabledGrey,\n        '&.Mui-selected': {\n          color: '#8BAA36',\n        },\n      }}\n    />\n  ));\n  const onMouseEnter = () => {\n    setFlag(true);\n  };\n  const onMouseLeave = () => {\n    setFlag(false);\n  };\n  const isMobile = window.innerWidth < 376;\n\n  return (\n    <Box\n      sx={{ maxWidth: '98%', bgcolor: 'transparent', borderBottom: theme.borders.mainSearchInput }}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    >\n      <Tabs\n        onChange={handleChange}\n        value={value}\n        variant=\"scrollable\"\n        scrollButtons={true}\n        aria-label=\"scrollable auto tabs example\"\n        sx={{\n          '& .MuiTabs-scroller': {\n            '& .css-1aquho2-MuiTabs-indicator': { backgroundColor: '#8BAA36' },\n            '& .css-ttwr4n': { backgroundColor: '#8BAA36' },\n            overflowX: 'auto',\n            scrollbarWidth: 'none',\n            '&::-webkit-scrollbar': {\n              display: 'none',\n            },\n          },\n          \n          '& .MuiTabs-flexContainer': {\n            gap: isMobile ? '26px' : '55px',\n            '& :hover': {\n              color: '#8BAA36',\n            },\n          },\n\n          '& .MuiTab-root': {\n            textTransform: 'capitalize',\n            minWidth: 'unset',\n            fontSize: isMobile ? '14px' : '18px',\n            fontFamily: 'Poppins',\n            fontWeight: '400',\n            lineHeight: '18px',\n            borderColor: '#8BAA36',\n            paddingTop: '10px',\n          },\n\n          '& svg': {\n            opacity: `${flag ? 1 : 0}`,\n            stroke: '#8BAA36',\n            strokeWidth: '3px',\n            transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n          },\n\n        }}\n      >\n        {items}\n      </Tabs>\n    </Box>)\n};","import styled from \"styled-components\";\n\nexport const CategoriesConteiner = styled.div`\n  padding: 0 16px;\n  padding-bottom: 149px;\n  max-width: 767px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px;\n    padding-bottom: 200px;\n    max-width: 1439px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin: 0 auto;\n  }\n`;\n","import { CategoryList } from \"components/CategoryList/CategoryList\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Title } from \"components/Title/Title\";\nimport { Suspense } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport { CategoriesConteiner } from \"./Categories.styled\";\n\nconst Categories = () => {\n  return (\n    <CategoriesConteiner>\n      <Title>Categories</Title>\n      <CategoryList />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </CategoriesConteiner>\n  );\n};\n\nexport default Categories;\n","import {axiosInstance} from 'service/API/axios';\n\nexport const getCategoryListAPI = async () => {\n\n  const response = await axiosInstance.get('/recipes/category-list');\n  return response.data;\n};\n\nexport const getAllRecipesByCategoryAPI = (category) => {\n\n  return axiosInstance.get(`/recipes/category/${category}`).then(({ data }) => {\n    return data;\n  });\n};\n\n"],"names":["CategoryList","categoryName","useParams","useState","value","setValue","mapArray","setMapArray","navigate","useNavigate","flag","setFlag","useEffect","getCategoryListAPI","then","data","error","console","log","message","length","idx","findIndex","e","toLowerCase","items","map","index","Tab","label","sx","padding","paddingBottom","color","theme","isMobile","window","innerWidth","Box","maxWidth","bgcolor","borderBottom","onMouseEnter","onMouseLeave","Tabs","onChange","event","newValue","target","textContent","variant","scrollButtons","backgroundColor","overflowX","scrollbarWidth","display","gap","textTransform","minWidth","fontSize","fontFamily","fontWeight","lineHeight","borderColor","paddingTop","opacity","stroke","strokeWidth","transition","CategoriesConteiner","styled","Title","Suspense","fallback","Loader","axiosInstance","response","getAllRecipesByCategoryAPI","category"],"sourceRoot":""}