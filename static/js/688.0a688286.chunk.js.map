{"version":3,"file":"static/js/688.0a688286.chunk.js","mappings":"yPAGaA,EAAiBC,EAAAA,QAAAA,IAAH,0CAIdC,EAAYD,EAAAA,QAAAA,EAAH,0zBACLE,EAAAA,EAAAA,MAAAA,MAMN,SAAAC,GAAC,OAAIA,EAAED,MAAME,OAAOC,cAAnB,IAEU,SAAAF,GAAC,OAAIA,EAAED,MAAME,OAAOE,aAAnB,GAUVP,GAUM,SAAAI,GAAC,OAAIA,EAAED,MAAMK,MAAMC,IAAlB,IACP,SAAAL,GAAC,OAAIA,EAAED,MAAME,OAAOC,cAAnB,IAcDI,EAAUT,EAAAA,QAAAA,IAAH,+JAQPU,EAAWV,EAAAA,QAAAA,GAAH,6hBAQS,SAAAG,GAAC,OAAIA,EAAED,MAAME,OAAOO,QAAnB,G,wICzDlBC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEzB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,KAAOC,QAASC,EAAAA,EAA1C,WACE,SAAC,KAAD,CAASC,IAAKL,EAAKM,MAAQN,EAAKM,MAAQ,CAAEC,QAAAA,GAAWC,IAAKR,EAAKS,SAC/D,SAAC,KAAD,CAAW,kBAAiBT,EAAKE,IAAjC,SAAuCF,EAAKS,QAC3CT,EAAKS,MAAMC,OAAS,KACnB,SAAC,KAAD,WACE,uBAAIV,EAAKS,cAMpB,E,uCCvBYE,EAAWxB,EAAAA,QAAAA,GAAH,8T,oBCARyB,EAAazB,EAAAA,QAAAA,IAAH,8MASD,SAAAG,GAAC,OAAIA,EAAED,MAAME,OAAOsB,MAAnB,ICPVC,EAAiB,kBAC5B,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,YARW,ECoC9B,EAjCyB,WACvB,IAAQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aAMR,IAJwBE,EAIxB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GALkBJ,EAKQF,GAJlBO,OAAO,GAAGC,cAAgBN,EAAKO,MAAM,GAkBjD,OAZFC,EAAAA,EAAAA,YAAU,WACR,KACoBC,EAAAA,EAAAA,GAA2BL,GAEnCM,MAAK,SAAAC,GACb,OAAOR,EAAWQ,EACnB,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACA,GAAE,CAACd,EAAcM,KAGhB,UAAChB,EAAD,WACsB,IAAnBc,EAAQf,SAAgB,SAACI,EAAD,IACpBW,EAAQa,KAAI,SAAAtC,GAAI,OACb,SAACD,EAAD,CAAUC,KAAMA,GAAWA,EAAKE,IADnB,MAM5B,C","sources":["components/CardMeal/CardMeal.styled.js","components/CardMeal/CardMeal.jsx","pages/CategoriesByName/CategoriesByName.styled.js","components/LoaderAbsolute/LoaderAbsolute.styled.js","components/LoaderAbsolute/LoaderAbsolute.jsx","pages/CategoriesByName/CategoriesByName.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from '../../theme/theme';\n\nexport const TooltipWrapper = styled.div`\n  display: none;\n`;\n\nexport const CardTitle = styled.p`\n  font-family: ${theme.fonts.main};\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: -0.24px;\n  color: ${p => p.theme.colors.mainHeaderText};\n  padding: 16px;\n  background-color: ${p => p.theme.colors.recipeBlockBg};\n  position: absolute;\n  top: 245px;\n  left: 16px;\n  border-radius: 8px;\n  width: calc(100% - 64px);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  :hover + ${TooltipWrapper} {\n    width: 100%;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    max-width: 100%;\n    margin-top: -25px;\n    border-radius: 5px;\n    padding: 4px;\n    font-family: ${p => p.theme.fonts.main};\n    color: ${p => p.theme.colors.mainHeaderText};\n    background-color: #8baa36;\n\n    p {\n      width: 100%;\n      padding: 5px;\n    }\n\n    @media (min-width: 1440px) {\n      margin-top: 8px;\n    }\n  }\n`;\n\nexport const CardImg = styled.img`\n  height: 323px;\n  width: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n  transition: all 1000ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const CardDish = styled.li`\n  width: 343px;\n  height: 323px;\n  border-radius: 8px;\n  position: relative;\n  transition: box-shadow 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    box-shadow: 0 0 7px 5px ${p => p.theme.colors.mainGrey};\n  }\n  @media (min-width: 768px) {\n    width: calc((100% - 32px) / 2);\n  }\n\n  @media (min-width: 1440px) {\n    width: calc((100% - 42px) / 4);\n  }\n\n  a {\n    display: block;\n    overflow: hidden;\n    border-radius: 8px;\n\n    :hover img {\n      transform: scale(1.25);\n      filter: contrast(130%);\n    }\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport {\n  CardImg,\n  CardTitle,\n  CardDish,\n  TooltipWrapper,\n} from './CardMeal.styled';\nimport NoImage from '../../images/default.jpg';\nimport { scrollToTop } from 'utils/scrollUp';\n\nexport const CardMeal = ({ meal }) => {\n\n  return (\n    <CardDish>\n      <Link to={`/recipe/${meal._id}`} onClick={scrollToTop}>\n        <CardImg src={meal.thumb ? meal.thumb : { NoImage }} alt={meal.title} />\n        <CardTitle data-tooltip-id={meal._id}>{meal.title}</CardTitle>\n        {meal.title.length > 30 && (\n          <TooltipWrapper>\n            <p>{meal.title}</p>\n          </TooltipWrapper>\n        )}\n      </Link>\n    </CardDish>\n  );\n};\n","import styled from 'styled-components';\n\nexport const RowTable = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-bottom: 100px;\n  margin-top: 32px;\n  gap: 28px;\n\n  @media (min-width: 768px) {\n    gap: 32px;\n    margin-bottom: 200px;\n    margin-top: 50px;\n  }\n\n  @media (min-width: 1440px) {\n    gap: 14px;\n    row-gap: 100px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LoaderBox1 = styled.div`\n  position: absolute;\n  top: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 350px;\n  width: 100%;\n  height: 100vh;\n  background-color: ${p => p.theme.colors.bodyBg};\n`;\n","import React from 'react';\nimport { Circles } from 'react-loader-spinner';\nimport { LoaderBox1 } from './LoaderAbsolute.styled';\n\nexport const LoaderAbsolute = () => (\n  <LoaderBox1>\n    <Circles\n      height=\"40\"\n      width=\"40\"\n      color=\"#8BAA36\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"Loader\"\n    />\n  </LoaderBox1>\n);\n","import { CardMeal } from 'components/CardMeal/CardMeal';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { RowTable } from './CategoriesByName.styled';\nimport { getAllRecipesByCategoryAPI } from 'service/API/CategoriesAPI';\nimport { LoaderAbsolute } from 'components/LoaderAbsolute/LoaderAbsolute';\n\nconst CategoriesByName = () => {\n  const { categoryName } = useParams();\n\n  function capitalizeWord(word) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }\n\n  const [recipes, setRecipes] = useState([]);\n  const category = capitalizeWord(categoryName);\n\n  useEffect(() => {\n    try {\n      const categorys = getAllRecipesByCategoryAPI(category);\n\n      categorys.then(data => {\n        return setRecipes(data);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    }, [categoryName, category]);\n\n    return (\n      <RowTable>\n        {recipes.length === 0 && <LoaderAbsolute/>}\n            {recipes.map(meal => (\n                <CardMeal meal={meal} key={meal._id} />\n            ))}\n        </RowTable>\n    );\n\n};\n\nexport default CategoriesByName;\n"],"names":["TooltipWrapper","styled","CardTitle","theme","p","colors","mainHeaderText","recipeBlockBg","fonts","main","CardImg","CardDish","mainGrey","CardMeal","meal","to","_id","onClick","scrollToTop","src","thumb","NoImage","alt","title","length","RowTable","LoaderBox1","bodyBg","LoaderAbsolute","height","width","color","ariaLabel","wrapperStyle","wrapperClass","categoryName","useParams","word","useState","recipes","setRecipes","category","charAt","toUpperCase","slice","useEffect","getAllRecipesByCategoryAPI","then","data","error","console","log","map"],"sourceRoot":""}